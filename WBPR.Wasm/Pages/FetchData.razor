@page "/fetchdata"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Graph
@inject HttpClient Http
@attribute [Authorize]
@inject GraphServiceClient graphClient

<PageTitle>Weather forecast</PageTitle>

@if (user != null)
{
    <p>Mobile Phone: @user.MobilePhone</p>
    <p>User Name: @user.DisplayName</p>
    <p>Mail: @user.Mail</p>
@*    <p>File: @user.Drive.Root.WebUrl</p>*@
}

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;
    private User user;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
        var request = graphClient.Me.Request();
        user = await request.GetAsync();
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
