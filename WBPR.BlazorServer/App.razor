@using WBPR.Base.Config
@inject NavigationManager navigationManager

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    <MudText Typo="Typo.h5" Color="Color.Primary">Sorry, you can not aaccess this address.</MudText>
                    @{
                        //isAuth = false;
                        // Exception https://github.com/dotnet/aspnetcore/issues/13582
                        navigationManager.NavigateTo(Constant.MS_LOGIN_URL, forceLoad: true);
                    }
                </NotAuthorized>
                <Authorizing>
                    Loading...
                </Authorizing>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <MudText Typo="Typo.h3" Color="Color.Primary">Sorry, there's nothing at this address.</MudText>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code{
    //[Parameter]
    //public string AccessToken { get; set; }

    //protected override void OnInitialized()
    //{
    //    //Accept the parameter from _Host.cshtml and move into the Token Provider
    //    TokenProvider.AccessToken = AccessToken;
    //    base.OnInitialized();
    //}
}