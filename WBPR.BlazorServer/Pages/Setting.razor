@page "/setting"
@using Microsoft.Extensions.Localization
@using Microsoft.Graph
@using WBPR.Service.Interfaces
@using WBPR.Service.Models.Common
@using WBPR.Service.Services
@using Microsoft.Identity.Web
@inject IStringLocalizer<Setting> langLoc
@inject ISettingService settingService
@inject GraphServiceClient GraphClient
@inject MicrosoftIdentityConsentAndConditionalAccessHandler ConsentHandler

<PageTitle>WBPR - @langLoc["PageTitle"]</PageTitle>

<MudStack AlignItems="AlignItems.Center">

    <MudText Typo="Typo.h5">@langLoc["Appearance"]</MudText>
    <MudItem>
        <MudPaper Class="pa-4" Elevation="4">
            
            <MudSwitch Checked="@(blazorUiInfo==null?false:blazorUiInfo.IsDarkMode)"
                       Label="@langLoc["DarkMode"]" Color="Color.Primary" 
                       CheckedChanged="@(async(value)=>await SetDarkMode(value))" T="bool" />
        </MudPaper>
    </MudItem>

    <MudText Typo="Typo.body1">@res</MudText>
</MudStack>

@code {
    [CascadingParameter]
    protected BlazorUiInfo blazorUiInfo { get; set; }

    private string res = "123456789";
    private PreachReportData prData = new PreachReportData();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            
        }
    }

    private async Task SetDarkMode(bool value)
    {
        blazorUiInfo.IsDarkMode = value;
        await settingService.SetDarkTheme(value);
        StateHasChanged();
    }
}
