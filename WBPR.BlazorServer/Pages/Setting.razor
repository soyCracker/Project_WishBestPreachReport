@page "/"
@using Microsoft.Extensions.Localization
@using WBPR.Service.Interfaces
@using WBPR.Service.Models.Common
@using WBPR.Service.Services
@inject IStringLocalizer<Setting> langLoc
@inject ISettingService settingService
@inject IStorageService StorageService

<PageTitle>WBPR - @langLoc["PageTitle"]</PageTitle>

<MudStack AlignItems="AlignItems.Center">

    <MudText Typo="Typo.h5">@langLoc["Appearance"]</MudText>
    <MudItem>
        <MudPaper Class="pa-4" Elevation="4">
            
            <MudSwitch Checked="@(blazorUiInfo==null?false:blazorUiInfo.IsDarkMode)"
                       Label="@langLoc["DarkMode"]" Color="Color.Primary" 
                       CheckedChanged="@(async(value)=>await SetDarkMode(value))" T="bool" />
        </MudPaper>
    </MudItem>

    <MudText Typo="Typo.body1">@res</MudText>
</MudStack>

@code {
    [CascadingParameter]
    protected BlazorUiInfo blazorUiInfo { get; set; }
    private string res = "123456789";
    //private GoogleDriveStorageService gdService;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            //GoogleConfig googleConfig = new GoogleConfig
            //    {
            //        ClientId = "558796868602-4fvgg8u33d5pg4psr0i10ana24pa0e1e.apps.googleusercontent.com",
            //        ClientSecret = "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"
            //    };
            //gdService = new GoogleDriveStorageService(googleConfig);
            //gdService.Save(null, null, null);
            var testData = await StorageService.Get("WPBR_DATA", "WPBR_DATA_202212");
            res = testData.Msg;
            StateHasChanged();
        }
    }

    private async Task SetDarkMode(bool value)
    {
        blazorUiInfo.IsDarkMode = value;
        await settingService.SetDarkTheme(value);
        StateHasChanged();
    }
}
